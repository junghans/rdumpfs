#!/bin/ash
# rdumpfs - rsync-based dump file system backup tool
# Usage: rdumpfs [-f] [RSYNCOPT...] SRC [SRC...] DST
#   -f: force potentially dangerous operations
#
# Written by Leah Neukirchen <http://purl.org/net/chneukirchen>.
# rdumpfs is in the public domain.
#
# To the extent possible under law, the creator of this work has waived
# all copyright and related or neighboring rights to this work.
# http://creativecommons.org/publicdomain/zero/1.0/

fail() {
  echo "$0: $1" 1>&2
  exit 1
}

force=false
[ "$1" = -f ] && force=true && shift

[ $# -lt 2 ] && fail "too few arguments
Usage: rdumpfs [-f] [RSYNCOPT...] SRC DST"

rsync=$(type -p rsync)
[ -z "$rsync" ] && fail "no rsync found"

eval dst=\${$#}
#synology has broken local query, remote works
#but need to specify "remote"=localhost rsync
[ -z "${dst//[^:]}" ] && dst="localhost:$dst" && rsync="$rsync --rsync-path=$rsync"

now=$(date +%Y%m%d)
last=$($rsync --no-h $dst/ | cut -c44- | grep '^[0-9]*$' | sort -nr | sed -n '1p')
#last=$(ls -d1 $dst/20* | tail -1 | sed 's@.*/@@')

if [[ -z "$last" ]]; then
  $force || fail "no dump found, use -f on first dump."
else
  rsync_args="--link-dest=../$last"
fi

if [ "$last" = "$now" ]; then
  $force || fail "dump $now exists, use -f to overwrite/update."
  rsync_args="--delete-delay --delete-excluded"
  dumps1=$($rsync --no-h $dst/ | cut -c44- | grep '^[0-9]*$' | sort -nr | sed -n '2p')
  [[ -n "${dumps1}" ]] && rsync_args="$rsync_args --link-dest=../${dumps1}"
fi

LOGFILE=".rdumpfs.${RANDOM}.log"
$rsync --log-file $LOGFILE -aH --stats --human-readable --out-format='%10l %n%L' --log-file-format='%10l %i %n%L' \
       --filter='dir-merge /.rdumpfs' --filter='protect .rdumpfs.*.log' ${rsync_args} "$@"/"$now"
EC=$?
$rsync $LOGFILE "$dst/$now/"
[ $EC -eq 0 ] && rm -f $LOGFILE
exit $EC
